print("hello world")
install.packages("caret", dependencies=TRUE)
package(caret)
package("caret")
library("caret")
#####  READING CREDSCO_BIN
setwd("/home/pablesky/Documentos/MD-FIB/Refactor")
setwd("~/MD-FIB/Refactor")
#####  READING CREDSCO_BIN
setwd("/home/pablesky/Documentos/MD-FIB/Refactor")
dd<- read.csv("sinMissings.csv", stringsAsFactors = TRUE)
set.seed(0)
library("dplyr")
dd<-sample_n(dd,10000)
##### PCA with FactoMineR
#install.packages("FactoMineR")
library(FactoMineR)
### Perform PCA
?PCA
numeriques <- c()
for (i in 1:ncol(dd)) {
if(is.numeric(dd[,i])) {
numeriques <- c(numeriques, i)
}
}
print(numeriques)
res.pca<-PCA(dd[,numeriques], ncp = 6,graph=FALSE)
res.pca
# Eigenvalues
res.pca$eig
### PCA graphs
?plot.PCA
### Perform PCA
?PCA
### Plot for the variables
plot(res.pca,choix="var",axes=c(1,2))
plot(res.pca,choix="var",axes=c(3,4),select = "cos2 0.3")
plot(res.pca,choix="var",axes=c(5,6),select = "cos2 0.3")
### Plot for the individuals
plot(res.pca,choix="ind",invisible="quali",axes=c(1,2),label="none")
plot(res.pca,choix="ind",invisible="quali",axes=c(3,4),label="none")
plot(res.pca,choix="ind",invisible="quali",axes=c(5,6),label="none")
### Plot for the variables
plot(res.pca,choix="var",axes=c(1,2))
plot(res.pca,choix="var",axes=c(3,4),select = "cos2 0.3")
plot(res.pca,choix="var",axes=c(5,6),select = "cos2 0.3")
### Plot for the individuals
plot(res.pca,choix="ind",invisible="quali",axes=c(1,2),label="none")
plot(res.pca,choix="ind",invisible="quali",axes=c(3,4),label="none")
plot(res.pca,choix="ind",invisible="quali",axes=c(5,6),label="none")
# Compute distances
Psi<-res.pca$ind$coord
D = dist(Psi)
# Hierarchical clustering
hc <- hclust(D, method = "ward.D")
plot(hc)
barplot(hc$height[1:10],main="Aggregated distance at each iteration")
# How many clusters?
abline(h=0.12,col="red",lwd=2)
abline(h=0.08,col="red",lty=2)
# Number of clusters
nc = 3
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Number of clusters
nc = 5
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
# Number of clusters
nc = 4
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3"),pch=1,col=c(1:3))
# Number of clusters
nc = 3
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3"),pch=1,col=c(1:3))
# Number of clusters
nc = 5
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3"),pch=1,col=c(1:3))
# Number of clusters
nc = 4
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3"),pch=1,col=c(1:3))
# Number of clusters
nc = 5
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3", "c4", "c5"),pch=1,col=c(1:3))
legend("topright",c("c1","c2","c3", "c4", "c5"),pch=1,col=c(1:5))
# Number of clusters
nc = 4
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3", "c4", "c5"),pch=1,col=c(1:5))
legend("topright",c("c1","c2","c3", "c4", "c5"),pch=1,col=c(1:5))
# Number of clusters
nc = 4
# Cut tree
clus1<- cutree(hc,nc)
table(clus1)
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1))
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3", "c4"),pch=1,col=c(1:5))
legend("topright",c("c1","c2","c3", "c4"),pch=1,col=c(1:5), main="Clusters on first principal plane")
# Representation of the clusters on the first principal plane
plot(Psi, col=as.numeric(clus1), main="Clusters on first principal plane")
abline(h=0,v=0,col="gray")
legend("topright",c("c1","c2","c3", "c4"),pch=1,col=c(1:5))
